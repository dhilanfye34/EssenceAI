"""Initial migration.

Revision ID: f497eb263c90
Revises: ade1dc23d462
Create Date: 2024-08-06 08:41:10.031668

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.engine.reflection import Inspector

# revision identifiers, used by Alembic.
revision = 'f497eb263c90'
down_revision = 'ade1dc23d462'
branch_labels = None
depends_on = None

# Check if the column already exists
def column_exists(table_name, column_name):
    bind = op.get_bind()
    insp = Inspector.from_engine(bind)
    columns = [col['name'] for col in insp.get_columns(table_name)]
    return column_name in columns

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if not column_exists('article', 'cancer_type'):
        with op.batch_alter_table('article', schema=None) as batch_op:
            batch_op.add_column(sa.Column('cancer_type', sa.String(length=50), nullable=True, server_default='Unknown'))
            batch_op.alter_column('title',
                   existing_type=sa.VARCHAR(length=200),
                   type_=sa.String(length=255),
                   existing_nullable=False)
            batch_op.alter_column('summary',
                   existing_type=sa.TEXT(),
                   nullable=True)
            batch_op.alter_column('published_date',
                   existing_type=postgresql.TIMESTAMP(),
                   nullable=False)

        # Update existing records
        op.execute("UPDATE article SET cancer_type = 'Unknown' WHERE cancer_type IS NULL")

        # Alter the column to make it NOT NULL
        with op.batch_alter_table('article', schema=None) as batch_op:
            batch_op.alter_column('cancer_type', existing_type=sa.String(length=50), nullable=False, server_default=None)
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('article', schema=None) as batch_op:
        batch_op.alter_column('published_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('summary',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('title',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.drop_column('cancer_type')
    # ### end Alembic commands ###
